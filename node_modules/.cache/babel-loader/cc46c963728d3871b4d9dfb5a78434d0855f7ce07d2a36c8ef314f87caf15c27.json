{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u658E\\u7530 \\u7BC9\\\\Documents\\\\javascript\\\\type\\\\y-app\\\\src\\\\pages\\\\bort.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Bort() {\n  _s();\n  const [selectedGame, setSelectedGame] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [games, setGames] = useState([]);\n  useEffect(() => {\n    fetchGames();\n  }, []);\n  const fetchGames = () => {\n    // 投票数を取得\n    axios.get('http://localhost:5000/game_selection').then(response => {\n      setGames(response.data);\n    }).catch(error => {\n      console.error('Error fetching game selections:', error);\n    });\n  };\n  const handleGameSelect = game => {\n    setSelectedGame(game);\n    axios.post('http://localhost:5000/game_selection', {\n      game\n    }).then(() => {\n      setSuccessMessage('Game selection recorded successfully');\n      fetchGames();\n    }).catch(error => {\n      console.error('Error recording game selection:', error);\n      setSuccessMessage('Failed to record game selection');\n    });\n  };\n  const handleReset = () => {\n    axios.post('http://localhost:5000/reset').then(() => {\n      setSuccessMessage('Database reset successfully');\n      fetchGames();\n    }).catch(error => {\n      console.error('Error resetting database:', error);\n      setSuccessMessage('Failed to reset database');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Game Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u9078\\u629E\\u3055\\u308C\\u305F\\u30B2\\u30FC\\u30E0: \", selectedGame]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleGameSelect('Game1'),\n      children: \"Game1\\u3092\\u9078\\u629E\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleGameSelect('Game2'),\n      children: \"Game2\\u3092\\u9078\\u629E\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleGameSelect('Game3'),\n      children: \"Game3\\u3092\\u9078\\u629E\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"\\u30C7\\u30FC\\u30BF\\u30D9\\u30FC\\u30B9\\u3092\\u30EA\\u30BB\\u30C3\\u30C8\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u6295\\u7968\\u6570\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: games.map(game => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [game.game, \": \", game.count]\n      }, game.game, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Bort, \"6rzkvbcXPguo+YT26j1DQVt4IgY=\");\n_c = Bort;\nexport default Bort;\nvar _c;\n$RefreshReg$(_c, \"Bort\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Bort","_s","selectedGame","setSelectedGame","successMessage","setSuccessMessage","games","setGames","fetchGames","get","then","response","data","catch","error","console","handleGameSelect","game","post","handleReset","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","count","_c","$RefreshReg$"],"sources":["C:/Users/斎田 築/Documents/javascript/type/y-app/src/pages/bort.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface Game {\r\n    game: string;\r\n    count: number;\r\n}\r\n\r\nfunction Bort() {\r\n    const [selectedGame, setSelectedGame] = useState<string>('');\r\n    const [successMessage, setSuccessMessage] = useState<string>('');\r\n    const [games, setGames] = useState<Game[]>([]);\r\n\r\n    useEffect(() => {\r\n        fetchGames();\r\n    }, []);\r\n\r\n    const fetchGames = () => {\r\n        // 投票数を取得\r\n        axios.get('http://localhost:5000/game_selection')\r\n            .then((response) => {\r\n                setGames(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching game selections:', error);\r\n            });\r\n    };\r\n\r\n    const handleGameSelect = (game: string) => {\r\n        setSelectedGame(game);\r\n\r\n        axios.post('http://localhost:5000/game_selection', { game })\r\n            .then(() => {\r\n                setSuccessMessage('Game selection recorded successfully');\r\n                fetchGames();\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error recording game selection:', error);\r\n                setSuccessMessage('Failed to record game selection');\r\n            });\r\n    };\r\n\r\n    const handleReset = () => {\r\n        axios.post('http://localhost:5000/reset')\r\n            .then(() => {\r\n                setSuccessMessage('Database reset successfully');\r\n                fetchGames();\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error resetting database:', error);\r\n                setSuccessMessage('Failed to reset database');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Game Page</h1>\r\n            <p>選択されたゲーム: {selectedGame}</p>\r\n            <button onClick={() => handleGameSelect('Game1')}>Game1を選択する</button>\r\n            <button onClick={() => handleGameSelect('Game2')}>Game2を選択する</button>\r\n            <button onClick={() => handleGameSelect('Game3')}>Game3を選択する</button>\r\n            <button onClick={handleReset}>データベースをリセットする</button>\r\n            <p>{successMessage}</p>\r\n            <h2>投票数</h2>\r\n            <ul>\r\n                {games.map((game) => (\r\n                    <li key={game.game}>{game.game}: {game.count}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Bort;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}