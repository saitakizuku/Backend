{"ast":null,"code":"import React,{useEffect,useRef,useState}from\"react\";import style from\"../../css/Subpage.module.css\";import observer from\"../../functions/observer\";import{jsx as _jsx}from\"react/jsx-runtime\";const Video=_ref=>{let{className,src,title,frameBorder,allow,referrerPolicy}=_ref;const ref=useRef(null);const[isVisible,setIsVisible]=useState(false);useEffect(()=>{const callback=function(entries,observer){if(entries[0].isIntersecting){setIsVisible(true);}// else{\n//     setIsVisible(false);\n// }\n};observer(ref,callback);},[isVisible]);return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(style.videowrapper,\" \").concat(className,\" \").concat(isVisible?style.visible:\"\"),children:/*#__PURE__*/_jsx(\"iframe\",{className:style.iframe,ref:ref,width:\"800\",height:\"500\",src:src,title:title,frameBorder:frameBorder,allow:allow,referrerPolicy:referrerPolicy,allowFullScreen:true})});};export default Video;","map":{"version":3,"names":["React","useEffect","useRef","useState","style","observer","jsx","_jsx","Video","_ref","className","src","title","frameBorder","allow","referrerPolicy","ref","isVisible","setIsVisible","callback","entries","isIntersecting","concat","videowrapper","visible","children","iframe","width","height","allowFullScreen"],"sources":["C:/Users/斎田 築/Documents/javascript/type/y-app/src/pages/common/Video.tsx"],"sourcesContent":["import React, { HTMLAttributeReferrerPolicy, useEffect, useRef, useState } from \"react\";\r\nimport style from \"../../css/Subpage.module.css\";\r\nimport observer from \"../../functions/observer\";\r\n\r\ninterface Props {\r\n    className: string;\r\n    src: string;\r\n    title: string;\r\n    frameBorder: number;\r\n    allow: string;\r\n    referrerPolicy: HTMLAttributeReferrerPolicy;\r\n}\r\n\r\nconst Video: React.FC<Props> = ({ className, src, title, frameBorder, allow, referrerPolicy }) => {\r\n    const ref = useRef<HTMLIFrameElement>(null);\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const callback = function(entries: IntersectionObserverEntry[], observer: IntersectionObserver) {\r\n            if (entries[0].isIntersecting) {\r\n                setIsVisible(true);\r\n            }\r\n            // else{\r\n            //     setIsVisible(false);\r\n            // }\r\n        };\r\n\r\n        observer(ref, callback);\r\n    }, [isVisible]);\r\n\r\n    return (\r\n        <div className={`${style.videowrapper} ${className} ${isVisible ? style.visible : \"\"}`}>\r\n            <iframe \r\n                className={style.iframe} \r\n                ref={ref} \r\n                width=\"800\" \r\n                height=\"500\" \r\n                src={src} \r\n                title={title} \r\n                frameBorder={frameBorder} \r\n                allow={allow} \r\n                referrerPolicy={referrerPolicy} \r\n                allowFullScreen \r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Video;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAiCC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CACvF,MAAO,CAAAC,KAAK,KAAM,8BAA8B,CAChD,MAAO,CAAAC,QAAQ,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAWhD,KAAM,CAAAC,KAAsB,CAAGC,IAAA,EAAmE,IAAlE,CAAEC,SAAS,CAAEC,GAAG,CAAEC,KAAK,CAAEC,WAAW,CAAEC,KAAK,CAAEC,cAAe,CAAC,CAAAN,IAAA,CACzF,KAAM,CAAAO,GAAG,CAAGd,MAAM,CAAoB,IAAI,CAAC,CAC3C,KAAM,CAACe,SAAS,CAAEC,YAAY,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAEjDF,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAkB,QAAQ,CAAG,QAAAA,CAASC,OAAoC,CAAEf,QAA8B,CAAE,CAC5F,GAAIe,OAAO,CAAC,CAAC,CAAC,CAACC,cAAc,CAAE,CAC3BH,YAAY,CAAC,IAAI,CAAC,CACtB,CACA;AACA;AACA;AACJ,CAAC,CAEDb,QAAQ,CAACW,GAAG,CAAEG,QAAQ,CAAC,CAC3B,CAAC,CAAE,CAACF,SAAS,CAAC,CAAC,CAEf,mBACIV,IAAA,QAAKG,SAAS,IAAAY,MAAA,CAAKlB,KAAK,CAACmB,YAAY,MAAAD,MAAA,CAAIZ,SAAS,MAAAY,MAAA,CAAIL,SAAS,CAAGb,KAAK,CAACoB,OAAO,CAAG,EAAE,CAAG,CAAAC,QAAA,cACnFlB,IAAA,WACIG,SAAS,CAAEN,KAAK,CAACsB,MAAO,CACxBV,GAAG,CAAEA,GAAI,CACTW,KAAK,CAAC,KAAK,CACXC,MAAM,CAAC,KAAK,CACZjB,GAAG,CAAEA,GAAI,CACTC,KAAK,CAAEA,KAAM,CACbC,WAAW,CAAEA,WAAY,CACzBC,KAAK,CAAEA,KAAM,CACbC,cAAc,CAAEA,cAAe,CAC/Bc,eAAe,MAClB,CAAC,CACD,CAAC,CAEd,CAAC,CAED,cAAe,CAAArB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}