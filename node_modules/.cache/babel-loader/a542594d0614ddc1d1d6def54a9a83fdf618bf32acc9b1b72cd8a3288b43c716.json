{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u658E\\u7530 \\u7BC9\\\\Documents\\\\javascript\\\\my-app\\\\src\\\\pages\\\\bort.tsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Bort = ({\n  name,\n  flg,\n  setFlg\n}) => {\n  _s();\n  const [successMessage, setSuccessMessage] = useState('');\n  const [games, setGames] = useState([]);\n  useEffect(() => {\n    fetchGames();\n  }, []);\n  const fetchGames = () => {\n    // 投票数を取得\n    axios.get('http://localhost:5000/game_selection').then(response => {\n      setGames(response.data);\n    }).catch(error => {\n      console.error('Error fetching game selections:', error);\n    });\n  };\n  const handleGameSelect = game => {\n    setFlg(false);\n    axios.post('http://localhost:5000/game_selection', {\n      game\n    }).then(() => {\n      setSuccessMessage('投票ありがとうございます！');\n      fetchGames();\n    }).catch(error => {\n      console.error('Error recording game selection:', error);\n      setSuccessMessage('投票に失敗しました');\n    });\n  };\n  const handleReset = () => {\n    axios.post('http://localhost:5000/reset').then(() => {\n      setSuccessMessage('Database reset successfully');\n      fetchGames();\n    }).catch(error => {\n      console.error('Error resetting database:', error);\n      setSuccessMessage('Failed to reset database');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [flg ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleGameSelect(name),\n      children: \"\\u6295\\u7968\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 20\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"\\u30EA\\u30BB\\u30C3\\u30C8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u6295\\u7968\\u6570\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: games.map(game => game.game === name ? /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [game.game, \": \", game.count]\n      }, game.game, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 42\n      }, this) : null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(Bort, \"74wMMy5N7dSK4EfXXRXZsME5Apk=\");\n_c = Bort;\nexport default Bort;\nvar _c;\n$RefreshReg$(_c, \"Bort\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","Bort","name","flg","setFlg","_s","successMessage","setSuccessMessage","games","setGames","fetchGames","get","then","response","data","catch","error","console","handleGameSelect","game","post","handleReset","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","count","_c","$RefreshReg$"],"sources":["C:/Users/斎田 築/Documents/javascript/my-app/src/pages/bort.tsx"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\ninterface Game {\r\n    game: string;\r\n    count: number;\r\n}\r\n\r\ninterface Props {\r\n    name: string;\r\n    flg: boolean;\r\n    setFlg: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst Bort: React.FC<Props> = ({ name, flg, setFlg }) => {\r\n    const [successMessage, setSuccessMessage] = useState<string>('');\r\n    const [games, setGames] = useState<Game[]>([]);\r\n\r\n    useEffect(() => {\r\n        fetchGames();\r\n    }, []);\r\n\r\n    const fetchGames = () => {\r\n        // 投票数を取得\r\n        axios.get('http://localhost:5000/game_selection')\r\n            .then((response) => {\r\n                setGames(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching game selections:', error);\r\n            });\r\n    };\r\n\r\n    const handleGameSelect = (game: string) => {\r\n        setFlg(false);\r\n\r\n        axios.post('http://localhost:5000/game_selection', { game })\r\n            .then(() => {\r\n                setSuccessMessage('投票ありがとうございます！');\r\n                fetchGames();\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error recording game selection:', error);\r\n                setSuccessMessage('投票に失敗しました');\r\n            });\r\n    };\r\n\r\n    const handleReset = () => {\r\n        axios.post('http://localhost:5000/reset')\r\n            .then(() => {\r\n                setSuccessMessage('Database reset successfully');\r\n                fetchGames();\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error resetting database:', error);\r\n                setSuccessMessage('Failed to reset database');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {flg ? <button onClick={() => handleGameSelect(name)}>投票</button> : null}\r\n            <button onClick={handleReset}>リセット</button>\r\n            <p>{successMessage}</p>\r\n            <h2>投票数</h2>\r\n            <ul>\r\n                {games.map((game) => (\r\n                    game.game === name ? <li key={game.game}>{game.game}: {game.count}</li> : null\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Bort;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}